#version: "3.9"

services:
  # mongo:
  #   image: mongo
  #   ports:
  #     - 27017:27017

  # catalog:
  #   build:
  #     context: .
  #     dockerfile: src/microservices/CatalogMicroservice/Dockerfile
  #   depends_on:
  #     - mongo
  #   ports:
  #     - 44326:80

  # cart:
  #   build:
  #     context: .
  #     dockerfile: src/microservices/CartMicroservice/Dockerfile
  #   depends_on:
  #     - mongo
  #   ports:
  #     - 44388:80

  # identity:
  #   build:
  #     context: .
  #     dockerfile: src/microservices/IdentityMicroservice/Dockerfile
  #   depends_on:
  #     - mongo
  #   ports:
  #     - 44397:80

  # frontendgw:
  #   build:
  #     context: .
  #     dockerfile: src/gateways/FrontendGateway/Dockerfile
  #   depends_on:
  #     - mongo
  #     - catalog
  #     - cart
  #     - identity
  #   ports:
  #     - 44300:80

  # backendgw:
  #   build:
  #     context: .
  #     dockerfile: src/gateways/BackendGateway/Dockerfile
  #   depends_on:
  #     - mongo
  #     - catalog
  #     - identity
  #   ports:
  #     - 44359:80

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: src/uis/Frontend/Dockerfile
  #   ports:
  #     - 44317:80

  # backend:
  #   build:
  #     context: .
  #     dockerfile: src/uis/Backend/Dockerfile
  #   ports:
  #     - 44301:80

  #microservices api sections
  sample.product.api:
    image: ${DOCKER_REGISTRY-}sample-product-api:${PLATFORM:-}${PLATFORM_SERVICE}-${TAG:-}${PRODUCT_VERSION_BUILD}
    build:
      context: .
      dockerfile: src/services/Product/Product.API/Dockerfile
    container_name: sample.product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6002:80"
    networks:
      - default
    restart: always

  sample.customer.api:
    image: ${DOCKER_REGISTRY-}sample-customer-api:${PLATFORM:-}${PLATFORM_SERVICE}-${TAG:-}${CUSTOMER_VERSION_BUILD}
    build:
      context: .
      dockerfile: src/services/Customer/Customer.API/Dockerfile
    container_name: sample.customer.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6003:80"
    restart: always

  sample.basket.api:
    image: ${DOCKER_REGISTRY-}sample-basket-api:${PLATFORM:-}${PLATFORM_SERVICE}-${TAG:-}${BASKET_VERSION_BUILD}
    build:
      context: .
      dockerfile: src/services/Basket/Basket.API/Dockerfile
    container_name: sample.basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6004:80"
    restart: always

  sample.ordering.api:
    image: ${DOCKER_REGISTRY-}sample-ordering-api:${PLATFORM:-}${PLATFORM_SERVICE}-${TAG:-}${ORDERING_VERSION_BUILD}
    build:
      context: .
      dockerfile: src/services/Ordering/Ordering.API/Dockerfile
    container_name: sample.ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6005:80"
    restart: always

  sample.inventory.api:
    image: ${DOCKER_REGISTRY-}sample-inventory-api:${PLATFORM:-}${PLATFORM_SERVICE}-${TAG:-}${INVENTORY_VERSION_BUILD}
    build:
      context: .
      dockerfile: src/services/Inventory/Inventory.API/Dockerfile
    container_name: sample.inventory.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6006:80"
    restart: always

#network section
networks:
  default:
    name: local-docker-network
    driver: bridge


#volumes section

