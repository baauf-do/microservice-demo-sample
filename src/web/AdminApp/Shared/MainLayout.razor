@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager;

<MudPopoverProvider />
<MudThemeProvider Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="_themeManager.AppBarElevation">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Edge="Edge.Start"
                OnClick="@((e) => DrawerToggle())" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">Admin Dashboard</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">Admin Dashboard</MudText>
        </MudHidden>
        <MudSpacer />
        <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" direction="Direction.Bottom"
            offsetY="true" Dense="true">
            <MudMenuItem>English</MudMenuItem>
            <MudMenuItem>Swedish</MudMenuItem>
            <MudMenuItem>Old Norse</MudMenuItem>
        </MudMenu>
        <MudMenu Icon="@Icons.Material.Outlined.Widgets" Color="Color.Inherit" direction="Direction.Bottom"
            offsetY="true" Dense="true">
            <MudMenuItem Href="https://mudblazor.com/">MudBlazor</MudMenuItem>
            <MudMenuItem Href="https://github.com/Garderoben/MudBlazor.Templates">Source Code</MudMenuItem>
        </MudMenu>
        <MudMenu direction="Direction.Left" offsetY="true" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudAvatar>
                    <MudImage Src="images/avatar-default-user.jpg" />
                </MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <PersonCard FullName="@fullName" Class="mt-n2" />
                <MudDivider Class="mb-2" />
                <MudListItem T="string" Text="Account" Icon="@Icons.Material.Outlined.Person"
                    Href="/personal/account" />
                <MudListItem T="string" Text="Logout" Icon="@Icons.Material.Outlined.Login"
                    Href="/pages/authentication/login" />
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="_themeManager.DrawerElevation"
        ClipMode="_themeManager.DrawerClipMode">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar WrapContent="true">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit"
                    OnClick="@((e) => DrawerToggle())" Class="ml-3" />
                <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                <MudSpacer />
                <MudButton Variant="Variant.Text" Href="https://mudblazor.com/" Style="color:#594AE2;">
                    MudBlazor
                </MudButton>
                <MudButton Variant="Variant.Text" Href="https://github.com/Garderoben/MudBlazor.Templates"
                    Style="color:#424242;" Class="mr-3">Source Code</MudButton>
            </MudToolBar>
        </MudHidden>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<MudThemeManagerButton OnClick="@((e) => OpenThemeManager(true))" />
<MudThemeManager Open="_themeManagerOpen" OpenChanged="OpenThemeManager" Theme="_themeManager"
    ThemeChanged="UpdateTheme" />


@code {
    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();

    public bool _drawerOpen = true;
    public bool _themeManagerOpen = false;
    public string fullName = string.Empty;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    void OpenThemeManager(bool value)
    {
        _themeManagerOpen = value;
    }
    void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        // https://docs.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-5.0
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        fullName = user.GetFullName();

        if (!user.Identity!.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"{UrlConstants.Login}?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
        }

        _themeManager.Theme = new MudBlazorAdminDashboard();
        _themeManager.DrawerClipMode = DrawerClipMode.Always;
        _themeManager.FontFamily = "Montserrat";
        _themeManager.DefaultBorderRadius = 3;
        _themeManager.AppBarElevation = 4;
        _themeManager.DrawerElevation = 25;
        StateHasChanged();
    }
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Personal", href: "#"),
        new BreadcrumbItem("Dashboard", href: "#"),
    };
}